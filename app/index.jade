doctype 5
html
  head
    link(href='/stylesheets/style.css', rel='stylesheet')
    script(src='http://code.jquery.com/jquery-1.6.1.min.js')
    script(src='/socket.io/socket.io.js')
    script
      // socket.io specific code
      var socket = io.connect();

      socket.on('connect', function () {
        $('#chat').addClass('connected');
      });

      socket.on('announcement', function (msg, time) {
        $('#lines').append($('<p>').append($('<em>').text(time + ' ' + msg)));
      });

      socket.on('nicknames', function (nicknames) {
        $('#nicknames').empty().append($('<span>Online: </span>'));
        for (var i in nicknames) {
          $('#nicknames').append($('<b>').text(nicknames[i]));
        }
      });

      socket.on('avatars', function (avatars) {
        for (var i in avatars) {
          if($('#avatar-'+avatars[i]['nick']).length > 0){
            if(avatars[i]['del']){
              $('#avatar-'+avatars[i]['nick']).fadeOut('slow',function(){$(this).remove()});
            }
            else {
              $('#avatar-'+avatars[i]['nick']).css({'left':avatars[i]['x']+'px','top':avatars[i]['y']+'px'});
            }
          }
          else {
            $('body').append($('<div>').attr('id','avatar-'+avatars[i]['nick']).addClass('avatar').css({'left':avatars[i]['x']+'px','top':avatars[i]['y']+'px'}).hide().fadeIn('slow'));
          }
        }
      });

      socket.on('players',function (players)) {
        $('#grid .player').remove();
        for (var i in players) {
            $('#grid').append($('<div>').attr('id','player-'+players[i]['nick']).addClass('player').addClass('x-'+players[i]['x']).addClass('y-'+players[i]['y']);
          }
        }
      };

      socket.on('user message', message);

      socket.on('private message', privatemessage);

      socket.on('reconnect', function () {
        $('#lines').remove();
        var date = new Date();
        var timestamp = date.getHours()+':'+date.getMinutes()+':'+date.getSeconds();
        message('System', 'Reconnected to the server',timestamp);
      });

      socket.on('reconnecting', function () {
        var date = new Date();
        var timestamp = date.getHours()+':'+date.getMinutes()+':'+date.getSeconds();
        message('System', 'Attempting to re-connect to the server',timestamp);
      });

      socket.on('error', function (e) {
        var date = new Date();
        var timestamp = date.getHours()+':'+date.getMinutes()+':'+date.getSeconds();
        message('System', e ? e : 'A unknown error occurred',timestamp);
      });

      function message (from, msg, time) {
        $('#lines').append($('<p>').append($('<em>').text(time), $('<b>').text(from), msg));
      }

      function privatemessage (from, to, msg, time) {
        if(typeof(to) == 'object' && (to instanceof Array) ){ to = to.join(', '); }
        $('#lines').append($('<p>').append($('<em>').text(time), $('<b>').text('from:'+from+', to: '+to), msg));
      }

      // dom manipulation
      $(function () {
        $('#set-nickname').submit(function (ev) {
          socket.emit('nickname', $('#nick').val(), function (set) {
            if (!set) {
              socket.emit('avatar',0,0);
              clear();
              return $('#chat').addClass('nickname-set');
            }
            $('#nickname-err').css('visibility', 'visible');
          });
          return false;
        });

        $('#send-message').submit(function () {
          var date = new Date();
          var timestamp = date.getHours()+':'+date.getMinutes()+':'+date.getSeconds();
          msg = $('#message').val();
          
          if($('#to b').length > 0){
            var toUser = new Array();
            $('#to b').each(function(){
              toUser.push($(this).html());
            });
            privatemessage('me', toUser, msg.replace(/@(.*?) (.*?)/gi,'$2'),timestamp);
            socket.emit('private message', toUser, msg.replace(/@(.*?) (.*?)/gi,'$2'));
          }
          else if(msg != ''){
            message('me', $('#message').val(),timestamp);
            socket.emit('user message', $('#message').val());
          }
          clear();
          $('#lines').get(0).scrollTop = 10000000;
          return false;
        });

        $(document).mousemove(function(e){
          if($('#chat').hasClass('nickname-set')){
            socket.emit('avatar', e.pageX, e.pageY );
          }
        });

        $(document).keydown(function(event){
          var keyCode;
            if(event == null) {
              keyCode = window.event.keyCode;
            } else {
              keyCode = event.keyCode;
            }
          socket.emit('move',{
            38: UP,
            37: LEFT,
            40: DOWN,
            39: RIGHT
          }[keyCode]);  
        }); 
        
        $('#nicknames b').live('click',function(){
          var cur = $(this);
          var ex = false;
          $('#to b').each(function(){if($(this).html() == $(cur).html()){ex = true;}});
          if($('#to b').length == 0 || !ex){
            $('#to').append($('<b>').html($(this).html()));
          }
          $('#message').focus();
        });

        $('#to b').live('click',function(){
          $(this).remove();
          $('#message').focus();
        });

        function clear () {
          $('#message').val('').focus();
        };
      });
  body
    #grid
      #world
    #chat
      #nickname
        form.wrap#set-nickname
          p Please type in your nickname and press enter.
          input#nick
          p#nickname-err Nickname already in use
      #connecting
        .wrap Connecting to socket.io server
      #messages
        #nicknames
        #lines
      form#send-message
        #to
        input#message
        button Send
        div.clear
